from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram import Bot, Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from app.database.dao.filter import add_filter
from app.database.dao.like import add_like_stats
from app.database.dao.uni import get_uni_by_id, get_uni_by_name
from app.keyboards.inline import get_callback_btns
from app.keyboards.reply import get_keyboard, get_menu_keyboard
from app.database.dao.user import add_user
from app.filters.admin import IsAdmin
from sqlalchemy.ext.asyncio import AsyncSession


admin_kb = get_keyboard(
    "üîâ–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É",
    "üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    "–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞",
    "‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é",
    sizes=(2, 1, 1, )
)

adbot_router = Router()
adbot_router.message.filter(IsAdmin())

pop_uni_kb = get_callback_btns(
    btns={
        "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –ø–æ–ª–∏—Ç–µ—Ö": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –ø–æ–ª–∏—Ç–µ—Ö",
        "–ó–¥–µ—Å—å –Ω–µ—Ç –º–æ–µ–≥–æ –í–£–ó–∞": "none"
    },
    sizes=(1, )
)


class AuthBotInfo(StatesGroup):
    user_id = State()
    username = State()
    target = State()
    sex = State()
    sex_target = State()
    name = State()
    age = State()
    age_from = State()
    age_to = State()
    uni = State()
    photo = State()
    description = State()
    
    
@adbot_router.message(StateFilter(None), F.text == "–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞")
async def start_auth(message: Message, state: FSMContext):
    await state.set_state(AuthBotInfo.user_id)
    await message.answer_sticker("CAACAgIAAxkBAAISCGY15K9Srgqdh2Ksms_n38c69thAAAKPAQACK15TC1JZlsxRJSLCNAQ", reply_markup=ReplyKeyboardRemove())
    await message.answer("–í–≤–µ–¥–∏—Ç–µ user id")
    
    
    
@adbot_router.message(StateFilter(AuthBotInfo.user_id), F.text)
async def get_user_id(message: Message, state: FSMContext):
    await state.update_data(user_id=int(message.text))
    await state.set_state(AuthBotInfo.uni)
    await message.answer("–° –∫–∞–∫–æ–≥–æ –≤—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞?", reply_markup=pop_uni_kb)
    
@adbot_router.callback_query(StateFilter(AuthBotInfo.uni), F.data)
async def get_uni(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    if callback.data == "none":
        await callback.message.edit_text(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ—Ä–≤–∏—Å –ø–æ–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —ç—Ç–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=pop_uni_kb)
        return
    else:
        uni = await get_uni_by_name(session, callback.data)
        print(uni, uni.name)  
        await state.update_data(uni=uni.id)
        await state.set_state(AuthBotInfo.target)
        await callback.message.edit_text("–ß—Ç–æ –≤—ã –∏—â–∏—Ç–µ?", reply_markup=get_callback_btns(
            btns={"–î—Ä—É–∂–±—É": "–î—Ä—É–∂–±–∞", "–û—Ç–Ω–æ—à–µ–Ω–∏—è": "–û—Ç–Ω–æ—à–µ–Ω–∏—è", "–ö–∞–∫ –ø–æ–π–¥–µ—Ç": "–ö–∞–∫ –ø–æ–π–¥–µ—Ç"},
            sizes=(2, 1)
        ))
        
    
    
@adbot_router.callback_query(StateFilter(AuthBotInfo.target), F.data)
async def get_craft(callback: CallbackQuery, state: FSMContext):
    await state.update_data(target=callback.data)
    await state.set_state(AuthBotInfo.sex)
    await callback.message.edit_text("–í–∞—à –ø–æ–ª:", reply_markup=get_callback_btns(
        btns={"–ü–∞—Ä–µ–Ω—å": "–ü–∞—Ä–µ–Ω—å", "–î–µ–≤—É—à–∫–∞": "–î–µ–≤—É—à–∫–∞"},
        sizes=(2,)
    ))
    
    
@adbot_router.callback_query(StateFilter(AuthBotInfo.sex), F.data)
async def get_craft(callback: CallbackQuery, state: FSMContext):
    await state.update_data(sex=callback.data)
    await state.set_state(AuthBotInfo.sex_target)
    await callback.message.edit_text("–ö–æ–≥–æ –≤—ã –∏—â–∏—Ç–µ?", reply_markup=get_callback_btns(
        btns={"–î–µ–≤—É—à–∫—É": "–î–µ–≤—É—à–∫–∞", "–ü–∞—Ä–Ω—è": "–ü–∞—Ä–µ–Ω—å", "–í—Å–µ —Ä–∞–≤–Ω–æ": "–í—Å–µ —Ä–∞–≤–Ω–æ"},
        sizes=(2,)
    ))
    
    
@adbot_router.callback_query(StateFilter(AuthBotInfo.sex_target), F.data)
async def get_target(callback: CallbackQuery, state: FSMContext):
    await state.update_data(sex_target=callback.data)
    await state.set_state(AuthBotInfo.name)
    await callback.message.edit_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
        

@adbot_router.message(StateFilter(AuthBotInfo.name), F.text)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(AuthBotInfo.age)
    await message.answer("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?")
    
    
@adbot_router.message(StateFilter(AuthBotInfo.age), F.text)
async def get_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥")
        return
    elif int(message.text) < 14:
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 13, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥")
        return 
    elif int(message.text) > 80:
        await message.answer("–õ—é–¥–∏ —Å—Ç–æ–ª—å–∫–æ –Ω–µ –∂–∏–≤—É—Ç ;) –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ 80 –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥")
        return
    await state.update_data(age=int(message.text))
    await state.set_state(AuthBotInfo.photo)
    await message.answer("–ú—ã –Ω–∞ —Ñ–∏–Ω–∏—à–Ω–æ–π –ø—Ä—è–º–æ–π! –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")
    
    
    
@adbot_router.message(StateFilter(AuthBotInfo.photo), F.photo)
async def get_photo(message: Message, state: FSMContext):
    await state.update_data(photo=message.photo[-1].file_id)
    await state.set_state(AuthBotInfo.description)
    await message.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ", reply_markup=get_keyboard("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
    
    
@adbot_router.message(StateFilter(AuthBotInfo.description), F.text)
async def get_description(message: Message, state: FSMContext, session: AsyncSession):
    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(description=' ')
    else:
        await state.update_data(description=message.text)
        
    
        
    await state.update_data(username="bot")
    
    data = await state.get_data()
    
    uni = await get_uni_by_id(session, data["uni"])
        
    data_user = {
        "user_id": data["user_id"],
        "username": data["username"],
        "sex": data["sex"],
        "name": data["name"],
        "age": data["age"],
        "city": uni.city,
        "uni_id": data["uni"],
        "photo": data["photo"],
        "target": data["target"],
        "description": data["description"],
        "iterator": 0,
        "like_iterator": 0,
        "project_iterator": 0
    }
    
    data_filter = {
        "user_id": data["user_id"],
        "target": None,
        "sex_target": data["sex_target"],
        "uni_id": data["uni"],
    }
    

    await add_user(session, data_user)
    await add_filter(session, data_filter)
    
    uni = await get_uni_by_id(session, data["uni"])
    
    await message.answer("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω", reply_markup=admin_kb)
    await message.answer_photo(data["photo"], caption=f'üé¥{data["name"]}, {data["age"]}\nüèõ<b>{uni.name}</b>\nüîç<b>{data["target"]}</b>\n\n{data["description"]}')
    await state.clear()